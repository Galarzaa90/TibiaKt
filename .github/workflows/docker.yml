name: 🐋 Docker Build

on:
  push:
    branches: [ dev, main ]
    tags: [ v* ]

jobs:
  build:
    name: Build and Publish Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🚚
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker Meta 📋
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            ${{ vars.DOCKER_HUB_USERNAME }}/${{ vars.DOCKER_HUB_REPO }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
          flavor: |
            latest=auto

      - name: Compute VERSION 🧮
        # Strip leading 'v' on tags. Branch builds get BRANCH-SNAPSHOT.
        run: |
          ref="${GITHUB_REF}"
          name="${GITHUB_REF_NAME}"
          if [[ "$ref" == refs/tags/v* ]]; then
            echo "VERSION=${name#v}" >> "$GITHUB_ENV"
          elif [[ "$ref" == refs/heads/* ]]; then
            echo "VERSION=${name}-SNAPSHOT" >> "$GITHUB_ENV"
          fi
          echo "Resolved VERSION=$VERSION"

      - name: Login to Docker Hub 🐳
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GHCR 🐙
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx 🐋
        uses: docker/setup-buildx-action@v3

      - name: Build and Push 🚀
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ env.VERSION }}
          cache-from: type=gha,scope=docker
          cache-to: type=gha,mode=max,scope=docker
